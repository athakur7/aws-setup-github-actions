name: Using Reusable Workflow
on:
  push:
    branches:
      - main
env:
  PROJECT_DIR: 05-exec-flow/05-exec-flow-project
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v4
        with:
          path: ${{ env.PROJECT_DIR }}/node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
        working-directory: ${{ env.PROJECT_DIR }}
      - name: Lint code
        run: npm run lint
        working-directory: ${{ env.PROJECT_DIR }}
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v4
        with:
          path: ${{ env.PROJECT_DIR }}/node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
        working-directory: ${{ env.PROJECT_DIR }}
      - name: Test code
        id: run-tests
        run: npm run test
        working-directory: ${{ env.PROJECT_DIR }}
      - name: Upload test report
      # IF condition 
        # if: failure() && steps.run-tests.outcome == 'failure'
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: ${{ env.PROJECT_DIR }}/test.json
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v4
        with:
          path: ${{ env.PROJECT_DIR }}/node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
        working-directory: ${{ env.PROJECT_DIR }}
      - name: Build website
        id: build-website
        run: npm run build
        working-directory: ${{ env.PROJECT_DIR }}
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-files
          path: ${{ env.PROJECT_DIR }}/dist/
  deploy:
    needs: build
    uses: ./.github/workflows/05-reusable.yml
    with:
      artifact-name: dist-files
  report:
    needs: [lint,deploy]
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Output info
        run: |
          echo "Something went wrong"
          echo "${{ toJson(github)}}"